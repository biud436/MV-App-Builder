name: .NET

on:
    push:
        branches: [master]

jobs:
    build:
        runs-on: windows-latest

        steps:
            - uses: actions/checkout@v2
            - name: Add msbuild to PATH
              uses: microsoft/setup-msbuild@v1.1
            - name: Restore Nuget Packages using msbuild
              run: msbuild -t:restore
            - name: Build
              run: msbuild "Cordova Builder.csproj" -t:rebuild -verbosity:diag -property:Configuration=Release
            - name: Upload Artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: MVAppBuilder
                  path: ./bin/Release/
            # - uses: Klemensas/action-autotag@stable
            #   id: autotag
            #   with:
            #       GITHUB_TOKEN: "${{ secrets.TOKEN }}"
            # - name: Create Release
            #   id: create_release
            #   uses: actions/create-release@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.TOKEN }}
            #   with:
            #       tag_name: ${{ steps.autotag.outputs.tagname }}
            #       release_name: 맵에디터 v${{ steps.autotag.outputs.tagname }} 릴리즈
            #       body: |
            #           자동 릴리즈입니다.
            #       draft: false
            #       prerelease: false
            # - name: ZIP Arhcive using powershell
            #   shell: powershell
            #   run: |
            #       [Reflection.Assembly]::LoadWithPartialName("System.IO.Compression.FileSystem")
            #       $Compression = [System.IO.Compression.CompressionLevel]::Optimal
            #       $IncludeBaseDirectory = $false
            #       $Source = "bin/Release/"
            #       $Destination = "MVAppBuilder.zip"
            #       [System.IO.Compression.ZipFile]::CreateFromDirectory($Source,$Destination,$Compression,$IncludeBaseDirectory)
            # - name: Upload Release Asset
            #   id: upload-release-asset
            #   uses: actions/upload-release-asset@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.TOKEN }}
            #   with:
            #       upload_url: ${{ steps.create_release.outputs.upload_url }}
            #       asset_path: ./MVAppBuilder.zip
            #       asset_name: MVAppBuilder.zip
            #       asset_content_type: application/zip
