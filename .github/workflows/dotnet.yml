name: .NET

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Nuget 패키지 복구
        run: msbuild -t:restore
      - name: 빌드
        run: msbuild "Cordova Builder.csproj" -t:rebuild -verbosity:diag -property:Configuration=Release
      - name: NSIS NsProcess 플러그인 다운로드
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://nsis.sourceforge.io/mediawiki/images/1/18/NsProcess.zip
          file-name: NsProcess.zip
          location: ./
      - name: 압축 라이브러리 설치
        run: |
          choco install zip
      - name: NSIS 프로세스 종료 플러그인 압축 해제
        run: |
          unzip NsProcess -d NSIS_Plugins
      - name: 설치 파일 빌드
        uses: joncloud/makensis-action@v3.6
        with:
          script-file: ./builder.nsi
          additional-plugin-paths: ./NSIS_Plugins/Plugins
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MVAppBuilder.exe
          path: MVAppBuilder.exe
      # - uses: Klemensas/action-autotag@stable
      #   id: autotag
      #   with:
      #       GITHUB_TOKEN: "${{ secrets.TOKEN }}"
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.TOKEN }}
      #   with:
      #       tag_name: ${{ steps.autotag.outputs.tagname }}
      #       release_name: 맵에디터 v${{ steps.autotag.outputs.tagname }} 릴리즈
      #       body: |
      #           자동 릴리즈입니다.
      #       draft: false
      #       prerelease: false
      # - name: ZIP Arhcive using powershell
      #   shell: powershell
      #   run: |
      #       [Reflection.Assembly]::LoadWithPartialName("System.IO.Compression.FileSystem")
      #       $Compression = [System.IO.Compression.CompressionLevel]::Optimal
      #       $IncludeBaseDirectory = $false
      #       $Source = "bin/Release/"
      #       $Destination = "MVAppBuilder.zip"
      #       [System.IO.Compression.ZipFile]::CreateFromDirectory($Source,$Destination,$Compression,$IncludeBaseDirectory)
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.TOKEN }}
      #   with:
      #       upload_url: ${{ steps.create_release.outputs.upload_url }}
      #       asset_path: ./MVAppBuilder.zip
      #       asset_name: MVAppBuilder.zip
      #       asset_content_type: application/zip
